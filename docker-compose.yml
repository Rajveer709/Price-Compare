version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:13
    container_name: price_compare_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-price_compare}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-price_compare}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # MongoDB (alternative database)
  mongodb:
    image: mongo:5.0
    container_name: price_compare_mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-mongoadmin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-mongopass}
      MONGO_INITDB_DATABASE: ${MONGODB_DB:-price_compare}
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "'db.runCommand({ ping: 1 }).ok'"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and rate limiting
  redis:
    image: redis:6-alpine
    container_name: price_compare_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Application
  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: price_compare_app
    depends_on:
      db:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - DEBUG=${DEBUG:-False}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      # Database
      - POSTGRES_SERVER=db
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-price_compare}
      - MONGODB_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME:-mongoadmin}:${MONGO_INITDB_ROOT_PASSWORD:-mongopass}@mongodb:27017/
      - MONGODB_DB=${MONGODB_DB:-price_compare}
      # Proxy
      - PROXY_ENABLED=${PROXY_ENABLED:-False}
      - PROXY_LIST=${PROXY_LIST:-}
      - PROXY_USER=${PROXY_USER:-}
      - PROXY_PASSWORD=${PROXY_PASSWORD:-}
      # CAPTCHA
      - ANTICAPTCHA_KEY=${ANTICAPTCHA_KEY:-}
      # Notifications
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL:-}
      - EMAIL_NOTIFICATIONS=${EMAIL_NOTIFICATIONS:-False}
      - EMAIL_FROM=${EMAIL_FROM:-}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD:-}
      - EMAIL_TO=${EMAIL_TO:-}
      # Scheduler
      - SCHEDULER_TIMEZONE=${SCHEDULER_TIMEZONE:-UTC}
      - DAILY_SCRAPE_TIME=${DAILY_SCRAPE_TIME:-02:00}
      # Request Settings
      - REQUEST_TIMEOUT=${REQUEST_TIMEOUT:-30}
      - MAX_RETRIES=${MAX_RETRIES:-3}
      - DELAY_BETWEEN_REQUESTS=${DELAY_BETWEEN_REQUESTS:-5}
    volumes:
      - ./backend:/app
      - ./data/backups:/app/data/backups
      - ./data/sessions:/app/data/sessions
    ports:
      - "8000:8000"
    restart: unless-stopped

  # PGAdmin (Database management)
  pgadmin:
    image: dpage/pgadmin4
    container_name: price_compare_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    ports:
      - "5050:80"
    depends_on:
      - db

volumes:
  postgres_data:
  mongodb_data:
  redis_data:
